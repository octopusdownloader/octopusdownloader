/*
 * MIT License
 *
 * Copyright (c) 2019 octopusdownloader
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

group 'octopusdownloader'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'javafx-gradle-plugin'
apply plugin: "jacoco"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

dependencies {
    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/org.mock-server/mockserver-netty
    testCompile group: 'org.mock-server', name: 'mockserver-netty', version: '5.4.1'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
}

test{
    useJUnit{
        filter{
            include '**/*TestSuite.class'
            include '**/*UnitTest.class'
        }
    }
    
    systemProperties(System.getProperties())
}

subprojects {
    test.useJUnit()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

jfx {
    // minimal requirement for jfxJar-task
    mainClass = 'org.octopus.Main'

    // minimal requirement for jfxNative-task
    vendor = 'Octopus Org.'

    appName = 'OctopusDownloader'
}

check.dependsOn jacocoTestReport
